# This starter workflow is for a CMake project running on a single platform. There is a different starter workflow if you need cross-platform coverage.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-multi-platform.yml
name: CMake on a single platform

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    # runs-on: ubuntu-latest
    runs-on: self-hosted

    steps:
    - uses: actions/checkout@v4

    # 安装 vcpkg（如果尚未安装）
    - name: Install vcpkg if not exists
      run: |
          if command -v vcpkg &> /dev/null; then
              echo "vcpkg already installed, skipping installation."
          else
              echo "vcpkg not found, installing..."
              git clone https://github.com/microsoft/vcpkg.git
              ./vcpkg/bootstrap-vcpkg.sh
              echo "$(pwd)/vcpkg" >> $GITHUB_PATH
          fi
          
      # 安装 autoconf 和相关工具
    - name: Install autoconf
      run: |
          sudo apt update
          sudo apt install -y autoconf automake libtool make
          sudo apt install autoconf automake autoconf-archive

      # 验证 autoconf 安装
    - name: Check autoconf version
      run: autoconf --version
      
      # 安装依赖库
    - name: Install dependencies
      run: vcpkg install --x-install-root=${{github.workspace}}/build/vcpkg_installed
        
    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C ${{env.BUILD_TYPE}}

